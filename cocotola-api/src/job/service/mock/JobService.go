// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	context "context"

	service "github.com/kujilabo/cocotola/cocotola-api/src/job/service"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// JobService is an autogenerated mock type for the JobService type
type JobService struct {
	mock.Mock
}

// CleanOldJobs provides a mock function with given fields: ctx
func (_m *JobService) CleanOldJobs(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StartJob provides a mock function with given fields: ctx, job
func (_m *JobService) StartJob(ctx context.Context, job service.Job) error {
	ret := _m.Called(ctx, job)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, service.Job) error); ok {
		r0 = rf(ctx, job)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewJobService creates a new instance of JobService. It also registers a cleanup function to assert the mocks expectations.
func NewJobService(t testing.TB) *JobService {
	mock := &JobService{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
