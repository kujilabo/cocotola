// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/kujilabo/cocotola/cocotola-api/src/job/domain"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// JobStatus is an autogenerated mock type for the JobStatus type
type JobStatus struct {
	mock.Mock
}

// GetJobName provides a mock function with given fields:
func (_m *JobStatus) GetJobName() domain.JobName {
	ret := _m.Called()

	var r0 domain.JobName
	if rf, ok := ret.Get(0).(func() domain.JobName); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.JobName)
	}

	return r0
}

// GetJobParameter provides a mock function with given fields:
func (_m *JobStatus) GetJobParameter() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetJobStatusID provides a mock function with given fields:
func (_m *JobStatus) GetJobStatusID() domain.JobStatusID {
	ret := _m.Called()

	var r0 domain.JobStatusID
	if rf, ok := ret.Get(0).(func() domain.JobStatusID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.JobStatusID)
	}

	return r0
}

// NewJobStatus creates a new instance of JobStatus. It also registers a cleanup function to assert the mocks expectations.
func NewJobStatus(t testing.TB) *JobStatus {
	mock := &JobStatus{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
