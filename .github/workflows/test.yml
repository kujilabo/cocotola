---
on: [pull_request]
name: Test
jobs:
  test_go:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
        workdir:
          - lib
          - cocotola-api
          - cocotola-synthesizer-api
          - cocotola-translator-api
          - cocotola-tatoeba-api
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3307
          mysql version: "5.7"
          mysql database: "testdb"
          mysql user: "user"
          mysql password: "password"
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3317
          mysql version: "5.7"
          mysql database: "testdb"
          mysql user: "user"
          mysql password: "password"
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3327
          mysql version: "5.7"
          mysql database: "testdb"
          mysql user: "user"
          mysql password: "password"
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3337
          mysql version: "5.7"
          mysql database: "testdb"
          mysql user: "user"
          mysql password: "password"
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Bazelisk
        uses: bazelbuild/setup-bazelisk@v2.0.0
      - id: check_diff
        run: echo "dif_${{  matrix.workdir//-/_ }}=$(git diff --name-only HEAD^ HEAD | grep ${{ matrix.workdir }})" >> $GITHUB_OUTPUT
      - name: Test
        if: ${{ steps.check_diff_${{  matrix.workdir//-/_ }}.outputs.changed != '0' }}
        run: echo "Do Test ${{ matrix.workdir }}"
      # - name: Test
      #   working-directory: ${{ matrix.workdir }}
      #   run: go test -coverprofile="coverage.txt" -covermode=atomic ./...
      # - name: Coverage
      #   uses: codecov/codecov-action@v3
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: ${{ matrix.workdir }}/coverage.txt
      #     flags: ${{ matrix.workdir }}
