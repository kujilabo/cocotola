// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/kujilabo/cocotola/cocotola-api/src/app/domain"
	mock "github.com/stretchr/testify/mock"

	testing "testing"

	userdomain "github.com/kujilabo/cocotola/cocotola-api/src/user/domain"
)

// Stat is an autogenerated mock type for the Stat type
type Stat struct {
	mock.Mock
}

// GetHistory provides a mock function with given fields:
func (_m *Stat) GetHistory() domain.StatHistory {
	ret := _m.Called()

	var r0 domain.StatHistory
	if rf, ok := ret.Get(0).(func() domain.StatHistory); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.StatHistory)
	}

	return r0
}

// GetUserID provides a mock function with given fields:
func (_m *Stat) GetUserID() userdomain.AppUserID {
	ret := _m.Called()

	var r0 userdomain.AppUserID
	if rf, ok := ret.Get(0).(func() userdomain.AppUserID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(userdomain.AppUserID)
	}

	return r0
}

// NewStat creates a new instance of Stat. It also registers a cleanup function to assert the mocks expectations.
func NewStat(t testing.TB) *Stat {
	mock := &Stat{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
