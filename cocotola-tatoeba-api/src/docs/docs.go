// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/admin/link/import": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "import links",
                "tags": [
                    "tatoeba"
                ],
                "summary": "import links",
                "parameters": [
                    {
                        "type": "file",
                        "description": "links.csv",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/admin/sentence/import": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "import sentences",
                "tags": [
                    "tatoeba"
                ],
                "summary": "import sentences",
                "parameters": [
                    {
                        "type": "file",
                        "description": "***_sentences_detailed.tsv",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/user/sentence/{sentenceNumber}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "import links",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tatoeba"
                ],
                "summary": "import links",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sentence number",
                        "name": "sentenceNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TatoebaSentenceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/v1/user/sentence_pair/find": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "find pair of sentences",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tatoeba"
                ],
                "summary": "find pair of sentences",
                "parameters": [
                    {
                        "description": "parameter to find sentences",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TatoebaSentenceFindParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TatoebaSentencePairFindResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.TatoebaSentenceFindParameter": {
            "type": "object",
            "required": [
                "pageNo",
                "pageSize"
            ],
            "properties": {
                "keyword": {
                    "type": "string"
                },
                "pageNo": {
                    "type": "integer",
                    "minimum": 1
                },
                "pageSize": {
                    "type": "integer",
                    "minimum": 1
                },
                "random": {
                    "type": "boolean"
                }
            }
        },
        "entity.TatoebaSentencePair": {
            "type": "object",
            "properties": {
                "dst": {
                    "$ref": "#/definitions/entity.TatoebaSentenceResponse"
                },
                "src": {
                    "$ref": "#/definitions/entity.TatoebaSentenceResponse"
                }
            }
        },
        "entity.TatoebaSentencePairFindResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TatoebaSentencePair"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "entity.TatoebaSentenceResponse": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "lang2": {
                    "type": "string",
                    "enum": [
                        "ja",
                        "en"
                    ]
                },
                "sentenceNumber": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
