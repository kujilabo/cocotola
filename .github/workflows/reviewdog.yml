---
on: [pull_request]
name: Reviewdog
jobs:
  staticcheck:
    strategy:
      matrix:
        workdir: [lib, cocotola-api, cocotola-translator-api]
    name: runner / staticcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: staticcheck
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          golangci_lint_flags: "--config=../.github/.golangci.yml --disable-all -E staticcheck --timeout=10m"
          tool_name: staticcheck
          filter_mode: nofilter
          fail_on_error: true
          workdir: ${{ matrix.workdir }}

  golangci-lint:
    strategy:
      matrix:
        workdir: [lib, cocotola-api, cocotola-translator-api]
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          # golangci_lint_flags: "--enable-all --exclude-use-default=false"
          fail_on_error: true
          workdir: ${{ matrix.workdir }}

  errcheck:
    strategy:
      matrix:
        workdir: [lib, cocotola-api, cocotola-translator-api]
    name: runner / errcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: errcheck
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          golangci_lint_flags: "--disable-all -E errcheck --timeout=10m"
          tool_name: errcheck
          filter_mode: nofilter
          fail_on_error: true
          workdir: ${{ matrix.workdir }}

  gosec:
    strategy:
      matrix:
        workdir: [lib, cocotola-api, cocotola-translator-api]
    name: runner / gosec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: gosec
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          golangci_lint_flags: "--disable-all -E gosec --timeout=10m"
          tool_name: gosec
          fail_on_error: true
          workdir: ${{ matrix.workdir }}

  # dupl:
  #   name: runner / dupl
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: dupl
  #       uses: reviewdog/action-golangci-lint@v2
  #       with:
  #         github_token: ${{ secrets.REVIEWDOG_TOKEN }}
  #         reporter: github-pr-review
  #         golangci_lint_flags: "--disable-all -E dupl --timeout=10m"
  #         tool_name: dupl
  #         filter_mode: nofilter
  #         fail_on_error: true

  gofmt:
    strategy:
      matrix:
        workdir: [lib, cocotola-api, cocotola-translator-api]
    name: runner / gofmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: gofmt
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          golangci_lint_flags: "--disable-all -E gofmt --timeout=10m"
          tool_name: gofmt
          filter_mode: nofilter
          fail_on_error: true
          workdir: ${{ matrix.workdir }}

  unconvert:
    strategy:
      matrix:
        workdir: [lib, cocotola-api, cocotola-translator-api]
    name: runner / unconvert
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: unconvert
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          golangci_lint_flags: "--disable-all -E unconvert --timeout=10m"
          tool_name: unconvert
          filter_mode: nofilter
          fail_on_error: true
          workdir: ${{ matrix.workdir }}

  gomnd:
    strategy:
      matrix:
        workdir: [lib, cocotola-api, cocotola-translator-api]
    name: runner / gomnd
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: gomnd
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          golangci_lint_flags: "--disable-all -E gomnd --timeout=10m"
          tool_name: gomnd
          filter_mode: nofilter
          fail_on_error: true
          workdir: ${{ matrix.workdir }}

  errorlint:
    strategy:
      matrix:
        workdir: [lib, cocotola-api, cocotola-translator-api]
    name: runner / errorlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: errorlint
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          golangci_lint_flags: "--disable-all -E errorlint --timeout=10m"
          tool_name: errorlint
          filter_mode: nofilter
          fail_on_error: true
          workdir: ${{ matrix.workdir }}


  gocyclo:
    strategy:
      matrix:
        workdir: [lib, cocotola-api, cocotola-translator-api]
    name: runner / gocyclo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: gocyclo
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          golangci_lint_flags: "--config=../.github/.golangci.yml --disable-all --tests=false -E gocyclo --timeout=10m"
          tool_name: gocyclo
          filter_mode: nofilter
          fail_on_error: true
          workdir: ${{ matrix.workdir }}

  goimports:
    strategy:
      matrix:
        workdir: [lib, cocotola-api, cocotola-translator-api]
    name: runner / goimports
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: goimports
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          golangci_lint_flags: "--disable-all -E goimports --timeout=10m"
          tool_name: goimports
          fail_on_error: true
          workdir: ${{ matrix.workdir }}

  misspell:
    name: runner / misspell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          locale: "US"
          fail_on_error: true

  yamllint:
    name: runner / yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: yamllint
        uses: reviewdog/action-yamllint@v1
        with:
          github_token: ${{ secrets.REVIEWDOG_TOKEN }}
          reporter: github-pr-review
          yamllint_flags: "-c .github/.yamllint.yml ."
          fail_on_error: true
